# ref: https://github.com/actions/runner-images
name: amd64 Windows CMake

on: [push, pull_request, workflow_dispatch]

# Building using the github runner environement directly.
jobs:
  native:
    strategy:
      matrix:
        python: [
          #{version: '3.11'},
          {version: '3.12'},
          #{version: '3.13'},
        ]
        cmake: [
          {generator: "Visual Studio 17 2022", config: Release, build_target: ALL_BUILD, test_target: RUN_TESTS, install_target: INSTALL},
        ]
      fail-fast: false
    name: Windows•CMake(${{ matrix.cmake.generator }})•Python${{ matrix.python.version }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.version }}
      - name: Check Python
        run: |
          python --version
          python -m platform
      - name: Install Python requirements
        run: python -m pip install --upgrade -r $(python -c 'import sys; print("./pybind11_protobuf/requirements/requirements_lock_%d_%d.txt" % (sys.version_info[:2]))')
      - name: Check CMake
        run: |
          cmake --version
          cmake -G || true
      - name: Configure
        run: >
          cmake -S. -Bbuild
          -G "${{ matrix.cmake.generator }}"
          -DCMAKE_CONFIGURATION_TYPES=${{ matrix.cmake.config }}
          -DCMAKE_INSTALL_PREFIX=install
      - name: Build
        run: >
          cmake --build build
          --config ${{ matrix.cmake.config }}
          --target ${{ matrix.cmake.build_target }}
          -v -j2
      - name: Test
        shell: bash
        run: >
          CTEST_OUTPUT_ON_FAILURE=1
          cmake --build build
          --config ${{ matrix.cmake.config }}
          --target ${{ matrix.cmake.test_target }}
          -v
      - name: Install
        run: >
          cmake --build build
          --config ${{ matrix.cmake.config }}
          --target ${{ matrix.cmake.install_target }}
          -v

  amd64_windows_cmake:
    runs-on: ubuntu-latest
    needs: native
    steps:
      - uses: actions/checkout@v4
